import { ServerOptions, Server, DenoFetchHandler } from '../types.mjs';
import 'node:http';
import 'node:https';
import 'node:net';
import 'bun';
import '@cloudflare/workers-types';

declare const Response: {
    new (body?: BodyInit | null, init?: ResponseInit): Response;
    prototype: Response;
    error(): Response;
    json(data: any, init?: ResponseInit): Response;
    redirect(url: string | URL, status?: number): Response;
};
declare function serve(options: ServerOptions): DenoServer;
declare class DenoServer implements Server<DenoFetchHandler> {
    #private;
    readonly runtime = "deno";
    readonly options: ServerOptions;
    readonly deno: Server["deno"];
    readonly serveOptions: Deno.ServeTcpOptions | (Deno.ServeTcpOptions & Deno.TlsCertifiedKeyPem);
    readonly fetch: DenoFetchHandler;
    constructor(options: ServerOptions);
    serve(): Promise<this>;
    get url(): string | undefined;
    ready(): Promise<Server>;
    close(): Promise<void | undefined>;
}

export { Response, serve };
