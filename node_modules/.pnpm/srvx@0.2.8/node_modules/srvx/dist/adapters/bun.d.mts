import { ServerOptions, Server, BunFetchHandler } from '../types.mjs';
import * as Bun from 'bun';
import 'node:http';
import 'node:https';
import 'node:net';
import '@cloudflare/workers-types';

declare const Response: {
    new (body?: BodyInit | null, init?: ResponseInit): Response;
    prototype: Response;
    error(): Response;
    json(data: any, init?: ResponseInit): Response;
    redirect(url: string | URL, status?: number): Response;
};
declare function serve(options: ServerOptions): BunServer;
declare class BunServer implements Server<BunFetchHandler> {
    readonly runtime = "bun";
    readonly options: ServerOptions;
    readonly bun: Server["bun"];
    readonly serveOptions: Bun.ServeOptions | Bun.TLSServeOptions;
    readonly fetch: BunFetchHandler;
    constructor(options: ServerOptions);
    serve(): Promise<Awaited<this>>;
    get url(): string | undefined;
    ready(): Promise<Awaited<this>>;
    close(closeAll?: boolean): Promise<void | undefined>;
}

export { Response, serve };
