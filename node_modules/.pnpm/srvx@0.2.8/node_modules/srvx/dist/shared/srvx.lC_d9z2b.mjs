import { readFileSync } from 'node:fs';

function resolvePort(portOptions, portEnv) {
  const portInput = portOptions ?? portEnv;
  if (portInput === void 0) {
    return 3e3;
  }
  return typeof portInput === "number" ? portInput : Number.parseInt(portInput, 10);
}
function fmtURL(host, port, secure) {
  if (!host || !port) {
    return void 0;
  }
  if (host.includes(":")) {
    host = `[${host}]`;
  }
  return `http${secure ? "s" : ""}://${host}:${port}/`;
}
function resolveTLSOptions(opts) {
  if (!opts.tls || opts.protocol === "http") {
    return;
  }
  const cert = resolveCertOrKey(opts.tls.cert);
  const key = resolveCertOrKey(opts.tls.key);
  if (!cert && !key) {
    if (opts.protocol === "https") {
      throw new TypeError(
        "TLS `cert` and `key` must be provided for `https` protocol."
      );
    }
    return;
  }
  if (!cert || !key) {
    throw new TypeError("TLS `cert` and `key` must be provided together.");
  }
  return {
    cert,
    key,
    passphrase: opts.tls.passphrase
  };
}
function resolveCertOrKey(value) {
  if (!value) {
    return;
  }
  if (typeof value !== "string") {
    throw new TypeError(
      "TLS certificate and key must be strings in PEM format or file paths."
    );
  }
  if (value.startsWith("-----BEGIN ")) {
    return value;
  }
  return readFileSync(value, "utf8");
}

export { resolvePort as a, fmtURL as f, resolveTLSOptions as r };
